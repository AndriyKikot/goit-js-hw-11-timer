{"version":3,"sources":["webpack:///./index.js","webpack:///./js/CountdownTimer.js"],"names":["selector","targetDate","this","refs","days","document","querySelector","hours","mins","secs","description","timer","setInterval","currentDate","Date","now","deltaTime","updateClockface","time","pad","Math","floor","textContent","value","String","padStart"],"mappings":"iKAOuB,ICLvB,WACI,cAAsC,IAAxBA,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WACpBC,KAAKF,SAAWA,EAChBE,KAAKD,WAAaA,EAClBC,KAAKC,KAAO,CACRC,KAAMC,SAASC,cAAc,2BAC7BC,MAAOF,SAASC,cAAc,4BAC9BE,KAAMH,SAASC,cAAc,2BAC7BG,KAAMJ,SAASC,cAAc,2BAC7BI,YAAaL,SAASC,cAAc,wBAThD,2BAaIK,MAAA,WAAQ,WACJC,aAAY,WACR,IAAMC,EAAcC,KAAKC,MACnBC,EAAY,EAAKf,WAAaY,EACpC,EAAKI,gBAAgBD,KACtB,MAlBX,EAqBIC,gBAAA,SAAgBC,GACZ,IAAMd,EAAOF,KAAKiB,IAAIC,KAAKC,MAAMH,EAAO,QAClCX,EAAQL,KAAKiB,IAAIC,KAAKC,MAAOH,EAAO,MAAR,OAC5BV,EAAON,KAAKiB,IAAIC,KAAKC,MAAOH,EAAO,KAAR,MAC3BT,EAAOP,KAAKiB,IAAIC,KAAKC,MAAOH,EAAO,IAAe,MAExDhB,KAAKC,KAAKC,KAAKkB,YAAf,GAAgClB,EAChCF,KAAKC,KAAKI,MAAMe,YAAhB,GAAiCf,EACjCL,KAAKC,KAAKK,KAAKc,YAAf,GAAgCd,EAChCN,KAAKC,KAAKM,KAAKa,YAAf,GAAgCb,EAChCP,KAAKC,KAAKO,YAAYY,YAAtB,MAA0CpB,KAAKD,WAA/C,gBA/BR,EAkCIkB,IAAA,SAAII,GACA,OAAOC,OAAOD,GAAOE,SAAS,EAAG,MAnCzC,KDKuB,CAAmB,CACtCzB,SAAU,WACVC,WAAY,IAAIa,KAAK,qBAGVH,U","file":"main.77f2f63c9655aaf49c5b.js","sourcesContent":["\"use strict\";\n\nimport './css/styles.css'\n\nimport { CountdownTimer } from './js/CountdownTimer.js'\n\n\nconst countdownTimer = new CountdownTimer({\n    selector: '#timer-1',\n    targetDate: new Date('January 1, 2021'),\n});\n\ncountdownTimer.timer();","\"use strict\";\r\n\r\nexport class CountdownTimer {\r\n    constructor({ selector, targetDate }) {\r\n        this.selector = selector;\r\n        this.targetDate = targetDate;\r\n        this.refs = {\r\n            days: document.querySelector('span[data-value=\"days\"]'),\r\n            hours: document.querySelector('span[data-value=\"hours\"]'),\r\n            mins: document.querySelector('span[data-value=\"mins\"]'),\r\n            secs: document.querySelector('span[data-value=\"secs\"]'),\r\n            description: document.querySelector('.timer__description'),\r\n        }\r\n    }\r\n\r\n    timer() {\r\n        setInterval(() => {\r\n            const currentDate = Date.now();\r\n            const deltaTime = this.targetDate - currentDate;\r\n            this.updateClockface(deltaTime);\r\n        }, 1000);\r\n    };\r\n\r\n    updateClockface(time) {\r\n        const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n        const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\r\n        const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n        const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\r\n\r\n        this.refs.days.textContent = `${days}`;\r\n        this.refs.hours.textContent = `${hours}`;\r\n        this.refs.mins.textContent = `${mins}`;\r\n        this.refs.secs.textContent = `${secs}`;\r\n        this.refs.description.textContent = `До ${this.targetDate} осталось...`\r\n    }\r\n\r\n    pad(value) {\r\n        return String(value).padStart(2, '0')\r\n    };\r\n};\r\n"],"sourceRoot":""}